trigger:
  branches:
      include:
        - main
        
stages:
  - stage: Config_SonarQube
    displayName: 'Config SonarQube'
    jobs:
      - job: Config
        displayName: Config
        pool:
          name: 'OnPremises MRV CI'
        strategy:
          runOnce:
            deploy:
              steps:
              - task: SonarQubePrepare@4.11.0
              displayName: 'Prepare analysis on SonarQube'
              inputs:
                SonarQube: 'Sonarqube MRV'
                projectKey: '$(ProjectKey)'
                projectName: 'Data&Analytics-Comercial'
                projectVersion: '$(Build.BuildNumber)'
                # Files/Codes to exclude from analysis
                extraProperties:
                  sonar.exclusions=**/*.bin, Produto.Tests.Integration/**/*
              
  - stage: Build
    displayName: Build
    jobs:
      - job: Build
        displayName: Build
        pool:
          name: 'OnPremises MRV CI'
        steps:
          - publish: 'CMC' 
            artifact: CMC
            
          - task: SonarQubeAnalyze@4
              displayName: 'Run code Analysis'
          		  continueOnError: true
        
          - task: PowerShell@2
            displayName: 'Check Quality Gate Status'
            env:
              SonarToken: $(SonarToken)
            inputs:
              targetType: 'inline'
              script:
                $token = [System.Text.Encoding]::UTF8.GetBytes($env:SonarToken + ":")
                $base64 = [System.Convert]::ToBase64String($token)
                
                $basicAuth = [string]::Format("Basic {0}",$base64)
                $headers = @{ Authorization = $basicAuth }
                
                $result = Invoke-RestMethod -Method Get -Url https://sonarqube.mrv.com.br/api/qualitygates/project_status?projectKey=$(SonarProjectDevKey) -Headers $headers
                $result | ConvertTo-Json | Write-Host
        
                if ($result.projectStatus.status -eq "OK") {
                    write-Host "Quality Gate Succeeded"
                }else{
                    throw "Quality gate failed"
                }
         
      	  - task: SonarQubePublish@4
            displayName: 'Publish Quality Gate Result'
            continueOnError: true

          - task: PublishCodeCoverageResults21
            displayName: 'Publish code coverage from $(Build.SourcesDirectory)/coverage/coverage.opencover.xml'
            inputs: 
              codeCoverageTool: Cobertura
               summaryFileLocation: '%(Build.SourcesDirectory)/coverage/coverage.opencover.xml'
